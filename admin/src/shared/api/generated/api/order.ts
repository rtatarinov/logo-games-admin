/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Logo games API docs
 * Logogames docs
 * OpenAPI spec version: 1.0
 */
import { httpClient } from "../../http-client/http-client";
import type { CreateOrderDto } from "./logoGamesAPIDocs.schemas";
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];
export const orderControllerFindAll = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/order`, method: "GET" }, options);
};
export const orderControllerCreate = ({
    createOrderDto,
    options,
}: {
    createOrderDto: CreateOrderDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/order`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: createOrderDto,
        },
        options,
    );
};
export const orderControllerFindOne = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/order/${id}`, method: "GET" }, options);
};
export const orderControllerRemove = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/order/${id}`, method: "DELETE" }, options);
};
export const orderControllerGetOrderStatus = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/order/${id}/status`, method: "GET" }, options);
};
export type OrderControllerFindAllResult = NonNullable<
    Awaited<ReturnType<typeof orderControllerFindAll>>
>;
export type OrderControllerCreateResult = NonNullable<
    Awaited<ReturnType<typeof orderControllerCreate>>
>;
export type OrderControllerFindOneResult = NonNullable<
    Awaited<ReturnType<typeof orderControllerFindOne>>
>;
export type OrderControllerRemoveResult = NonNullable<
    Awaited<ReturnType<typeof orderControllerRemove>>
>;
export type OrderControllerGetOrderStatusResult = NonNullable<
    Awaited<ReturnType<typeof orderControllerGetOrderStatus>>
>;
