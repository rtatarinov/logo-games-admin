/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Logo games API docs
 * Logogames docs
 * OpenAPI spec version: 1.0
 */
import { httpClient } from "../../http-client/http-client";
import type {
    CreateUserDto,
    LoginUserByEmailDto,
    LoginUserByVkDto,
    UserControllerFindAll200,
    UserControllerFindAllParams,
    UserDto,
} from "./logoGamesAPIDocs.schemas";
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];
/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export const userControllerFindAll = ({
    params,
    options,
}: {
    params?: UserControllerFindAllParams;
    options?: SecondParameter<typeof httpClient<UserControllerFindAll200>>;
} = {}) => {
    return httpClient<UserControllerFindAll200>(
        { url: `/api/user`, method: "GET", params },
        options,
    );
};
export const userControllerCreate = ({
    createUserDto,
    options,
}: {
    createUserDto: CreateUserDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/user`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: createUserDto,
        },
        options,
    );
};
export const userControllerCurrent = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/user/current`, method: "GET" }, options);
};
/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
 */
export const userControllerGetUserById = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<UserDto>>;
}) => {
    return httpClient<UserDto>({ url: `/api/user/${id}`, method: "GET" }, options);
};
export const userControllerGetUserByVkId = ({
    vkId,
    options,
}: {
    vkId: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/user/vk/${vkId}`, method: "GET" }, options);
};
export const userControllerLoginEmail = ({
    loginUserByEmailDto,
    options,
}: {
    loginUserByEmailDto: LoginUserByEmailDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/user/login/email`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: loginUserByEmailDto,
        },
        options,
    );
};
export const userControllerLoginVk = ({
    loginUserByVkDto,
    options,
}: {
    loginUserByVkDto: LoginUserByVkDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/user/login/vk`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: loginUserByVkDto,
        },
        options,
    );
};
export const userControllerLogout = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/user/logout`, method: "POST" }, options);
};
export type UserControllerFindAllResult = NonNullable<
    Awaited<ReturnType<typeof userControllerFindAll>>
>;
export type UserControllerCreateResult = NonNullable<
    Awaited<ReturnType<typeof userControllerCreate>>
>;
export type UserControllerCurrentResult = NonNullable<
    Awaited<ReturnType<typeof userControllerCurrent>>
>;
export type UserControllerGetUserByIdResult = NonNullable<
    Awaited<ReturnType<typeof userControllerGetUserById>>
>;
export type UserControllerGetUserByVkIdResult = NonNullable<
    Awaited<ReturnType<typeof userControllerGetUserByVkId>>
>;
export type UserControllerLoginEmailResult = NonNullable<
    Awaited<ReturnType<typeof userControllerLoginEmail>>
>;
export type UserControllerLoginVkResult = NonNullable<
    Awaited<ReturnType<typeof userControllerLoginVk>>
>;
export type UserControllerLogoutResult = NonNullable<
    Awaited<ReturnType<typeof userControllerLogout>>
>;
