/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Logo games API docs
 * Logogames docs
 * OpenAPI spec version: 1.0
 */
import type { CreateTagDto, UpdateTagDto, UpdateTagPositionDto } from "./logoGamesAPIDocs.schemas";
import { httpClient } from "../../http-client/http-client";
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];
export const tagControllerFindAll = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/tag`, method: "GET" }, options);
};
export const tagControllerCreate = ({
    createTagDto,
    options,
}: {
    createTagDto: CreateTagDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/tag`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: createTagDto,
        },
        options,
    );
};
export const tagControllerFindOne = ({
    slug,
    options,
}: {
    slug: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/tag/${slug}`, method: "GET" }, options);
};
export const tagControllerFindById = ({
    id,
    options,
}: {
    id: number;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/tag/${id}`, method: "GET" }, options);
};
export const tagControllerUpdate = ({
    id,
    updateTagDto,
    options,
}: {
    id: number;
    updateTagDto: UpdateTagDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/tag/${id}`,
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            data: updateTagDto,
        },
        options,
    );
};
export const tagControllerRemove = ({
    id,
    options,
}: {
    id: number;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/tag/${id}`, method: "DELETE" }, options);
};
export const tagControllerUpdatePosition = ({
    id,
    updateTagPositionDto,
    options,
}: {
    id: number;
    updateTagPositionDto: UpdateTagPositionDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/tag/${id}/position`,
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            data: updateTagPositionDto,
        },
        options,
    );
};
export type TagControllerFindAllResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerFindAll>>
>;
export type TagControllerCreateResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerCreate>>
>;
export type TagControllerFindOneResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerFindOne>>
>;
export type TagControllerFindByIdResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerFindById>>
>;
export type TagControllerUpdateResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerUpdate>>
>;
export type TagControllerRemoveResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerRemove>>
>;
export type TagControllerUpdatePositionResult = NonNullable<
    Awaited<ReturnType<typeof tagControllerUpdatePosition>>
>;
