/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Logo games API docs
 * Logogames docs
 * OpenAPI spec version: 1.0
 */
import { httpClient } from "../../http-client/http-client";
import type { CreateGameDto, UpdateGameDto } from "./logoGamesAPIDocs.schemas";
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];
export const gameControllerFindAll = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/game`, method: "GET" }, options);
};
export const gameControllerCreate = ({
    createGameDto,
    options,
}: {
    createGameDto: CreateGameDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/game`,
            method: "POST",
            headers: { "Content-Type": "application/json" },
            data: createGameDto,
        },
        options,
    );
};
export const gameControllerFindNew = (options?: SecondParameter<typeof httpClient<void>>) => {
    return httpClient<void>({ url: `/api/game/new`, method: "GET" }, options);
};
export const gameControllerFindOne = ({
    slug,
    options,
}: {
    slug: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/game/${slug}`, method: "GET" }, options);
};
export const gameControllerUpdate = ({
    id,
    updateGameDto,
    options,
}: {
    id: number;
    updateGameDto: UpdateGameDto;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>(
        {
            url: `/api/game/${id}`,
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            data: updateGameDto,
        },
        options,
    );
};
export const gameControllerRemove = ({
    id,
    options,
}: {
    id: number;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/game/${id}`, method: "DELETE" }, options);
};
export const gameControllerAddGameToFavorites = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/game/${id}/favorites`, method: "POST" }, options);
};
export const gameControllerRemoveGameFromFavorites = ({
    id,
    options,
}: {
    id: string;
    options?: SecondParameter<typeof httpClient<void>>;
}) => {
    return httpClient<void>({ url: `/api/game/${id}/favorites`, method: "DELETE" }, options);
};
export type GameControllerFindAllResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerFindAll>>
>;
export type GameControllerCreateResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerCreate>>
>;
export type GameControllerFindNewResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerFindNew>>
>;
export type GameControllerFindOneResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerFindOne>>
>;
export type GameControllerUpdateResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerUpdate>>
>;
export type GameControllerRemoveResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerRemove>>
>;
export type GameControllerAddGameToFavoritesResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerAddGameToFavorites>>
>;
export type GameControllerRemoveGameFromFavoritesResult = NonNullable<
    Awaited<ReturnType<typeof gameControllerRemoveGameFromFavorites>>
>;
