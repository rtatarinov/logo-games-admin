/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Logo games API docs
 * Logogames docs
 * OpenAPI spec version: 1.0
 */
export interface AdminDto {
    /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    id: number;
    /** –ò–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    name: string;
    /** Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    email: string;
}
export interface CreateAdminDto {
    /** –ò–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    name: string;
    /** Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    email: string;
    /** –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    password: string;
}
export interface LoginAdminDto {
    /** Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    email: string;
    /** –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
    password: string;
}
export interface CreateGameDto {
    [key: string]: unknown;
}
export interface UpdateGameDto {
    [key: string]: unknown;
}
export interface TrialDto {
    isActive: boolean;
    startAt: string;
    endAt: string;
}
/**
 * –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏
 */
export type UserSubscriptionDtoType =
    (typeof UserSubscriptionDtoType)[keyof typeof UserSubscriptionDtoType];
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserSubscriptionDtoType = {
    one_time: "one_time",
    recurring: "recurring",
    vk: "vk",
} as const;
/**
 * –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
 */
export type UserSubscriptionDtoStatus =
    (typeof UserSubscriptionDtoStatus)[keyof typeof UserSubscriptionDtoStatus];
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserSubscriptionDtoStatus = {
    active: "active",
    expired: "expired",
    cancelled: "cancelled",
    payment_failed: "payment_failed",
} as const;
export interface UserSubscriptionDto {
    /** –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ */
    type: UserSubscriptionDtoType;
    /** –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ */
    status: UserSubscriptionDtoStatus;
    /** –î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO */
    nextPaymentAt: string;
    /** –î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤ Unix timestamp */
    nextPaymentAtUnix: number;
    /**
     * –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
     * @nullable
     */
    expiredAt: string | null;
}
export type UserDtoUpdatedAt = {
    [key: string]: unknown;
};
/**
 * @nullable
 */
export type UserDtoTrial = TrialDto | null;
/**
 * @nullable
 */
export type UserDtoSubscription = UserSubscriptionDto | null;
export interface UserDto {
    id: number;
    vkId: number;
    email: string;
    firstName: string;
    lastName: string;
    /** @nullable */
    avatarUrl: string | null;
    createdAt: string;
    updatedAt: UserDtoUpdatedAt;
    /** @nullable */
    trial: UserDtoTrial;
    /** @nullable */
    subscription: UserDtoSubscription;
    /** ID –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    favoritesGames: number[];
}
export interface CreateUserDto {
    [key: string]: unknown;
}
export interface LoginUserByEmailDto {
    [key: string]: unknown;
}
export interface LoginUserByVkDto {
    [key: string]: unknown;
}
export interface RefreshUserTokenDto {
    /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–∫–µ–Ω–∞ */
    id: number;
    /** –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    userId: number;
    /** –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ */
    createdAt: string;
}
export interface CreatePaymentDto {
    [key: string]: unknown;
}
export interface CreateOrderDto {
    [key: string]: unknown;
}
export interface CreateTariffPlanDto {
    [key: string]: unknown;
}
export interface UpdateTariffPlanDto {
    [key: string]: unknown;
}
export interface UpdateTariffPlanPositionDto {
    [key: string]: unknown;
}
export interface CheckPromoCodeDto {
    [key: string]: unknown;
}
export interface CreatePromoCodeDto {
    [key: string]: unknown;
}
export interface UpdatePromoCodeDto {
    [key: string]: unknown;
}
export interface CreateCategoryDto {
    [key: string]: unknown;
}
export interface UpdateCategoryDto {
    [key: string]: unknown;
}
export interface UpdateCategoryPositionDto {
    [key: string]: unknown;
}
export interface CreateTagDto {
    [key: string]: unknown;
}
export interface UpdateTagDto {
    [key: string]: unknown;
}
export interface UpdateTagPositionDto {
    [key: string]: unknown;
}
export interface GetVkConsumersDto {
    [key: string]: unknown;
}
export interface PlatformStatisticDto {
    /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ */
    subscriptionsCount: number;
    /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–ö –¥–æ–Ω–∞—Ç–æ–≤ */
    vkDonutsCount: number;
}
export interface PlatformHistoryStatisticDto {
    /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */
    id: number;
    /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫ */
    subscriptionsCount: number;
    /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–ö –¥–æ–Ω–∞—Ç–æ–≤ */
    vkDonutsCount: number;
    /** –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ */
    createdAt: string;
    /**
     * –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
     * @nullable
     */
    updatedAt?: string | null;
}
export type UserControllerFindAllParams = {
    /**
     * –ü–æ–∏—Å–∫
     */
    search?: string;
    /**
     * –°—Ç—Ä–∞–Ω–∏—Ü–∞
     * @minimum 1
     */
    page?: number;
    /**
     * –õ–∏–º–∏—Ç
     * @minimum 1
     */
    limit?: number;
    sort?: UserControllerFindAllSort;
    order?: UserControllerFindAllOrder;
};
export type UserControllerFindAllSort =
    (typeof UserControllerFindAllSort)[keyof typeof UserControllerFindAllSort];
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserControllerFindAllSort = {
    createdAt: "createdAt",
    firstName: "firstName",
    lastName: "lastName",
} as const;
export type UserControllerFindAllOrder =
    (typeof UserControllerFindAllOrder)[keyof typeof UserControllerFindAllOrder];
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserControllerFindAllOrder = {
    ASC: "ASC",
    DESC: "DESC",
} as const;
export type UserControllerFindAll200 = {
    items: UserDto[];
    total: number;
    page: number;
    limit: number;
};
